/*Sub-programs - Tutorial answeres*/

--Question 1
--Creatomg a new table with the structure of employee table.
CREATE TABLE tab_employee AS 
    SELECT * FROM employees 
    WHERE employee_id = NULL; --1=0 Where clause helps to create the empty table.

CREATE OR REPLACE PROCEDURE proc_emp_insert(
    emp_id tab_employee.EMPLOYEE_ID%TYPE,
    f_name tab_employee.FIRST_NAME%TYPE,
    l_name tab_employee.LAST_NAME%TYPE,
    email tab_employee.EMAIL%TYPE,
    p_num tab_employee.PHONE_NUMBER%TYPE,
    hire_date tab_employee.HIRE_DATE%TYPE,
    job_id tab_employee.JOB_ID%TYPE,
    sal tab_employee.SALARY%TYPE,
    comm_pct tab_employee.COMMISSION_PCT%TYPE,
    mngr_id tab_employee.MANAGER_ID%TYPE,
    dept_id tab_employee.DEPARTMENT_ID%TYPE)
AS
--Adding comments are very important. You can maintain a modification
--history as below. It will make maintenance easy.
/******************************************************************
Program_name : proc_emp_insert
Purpose: to insert given employee details into tab_employee table

Date        Created By        Description
01/01/2022  Sachini           Procedure created
02/02/2022  Ishani            Added a new parameter xxxx
******************************************************************/
BEGIN
  INSERT INTO tab_employee VALUES(
    emp_id,
    f_name,
    l_name,
    email,
    p_num,
    hire_date,
    job_id,
    sal,
    comm_pct,
    mngr_id,
    dept_id);
END proc_emp_insert;
/
--Use the following EXECUTE statement to insert data to the table.
EXEC proc_emp_insert(260, 'Vinuja', 'Shrimal', 'vinuja@gmail.com', '0112345678', TO_DATE('02/02/2020','DD/MM/YYYY'), 'SA', 50000, 0.1, 110,50);

--Question 2
CREATE OR REPLACE PROCEDURE proc_show_emp_fullnam
AS
/******************************************************************
Program_name : proc_show_emp_fullnam
Purpose: to display full name of the employees

Date        Created By        Description
01/01/2022  Sachini           Procedure created
******************************************************************/

  CURSOR cur_emp IS SELECT * from tab_employee;
BEGIN
  FOR v_emp IN cur_emp LOOP
    EXIT WHEN (SQL%NOTFOUND);
    DBMS_OUTPUT.PUT_LINE(v_emp.first_name||' '||v_emp.last_name);
  END LOOP;
END proc_show_emp_fullnam;
/

EXEC proc_show_emp_fullnam;

--Question 3
CREATE TABLE tab_dept (
              department_id NUMBER PRIMARY KEY, 
              department_name VARCHAR2(50),
              location_id NUMBER);

--Create the sequence
CREATE SEQUENCE dept_seq INCREMENT BY 1 START WITH 100;

CREATE OR REPLACE PROCEDURE proc_add_dept
                  (p_name tab_dept.department_name%TYPE DEFAULT 'UNKNOWN',            
                  p_location tab_dept.location_id%TYPE DEFAULT 1700) 
IS
/******************************************************************
Program_name : proc_add_dept
Purpose: to add departments to tab_dept table

Date        Created By        Description
01/01/2022  Sachini           Procedure created
******************************************************************/
BEGIN

    INSERT INTO tab_dept (department_id, department_name, location_id) 
                  VALUES (dept_seq.NEXTVAL, p_name, p_location);
                  
END proc_add_dept;

--Calling procedure

BEGIN
  proc_add_dept;
  proc_add_dept('TRAINING', 2500);
  proc_add_dept(p_location=>2400, p_name=> 'EDUCATION');
  proc_add_dept(p_location=>1200);
END;

--SELECT * FROM tab_dept

--Question 4
CREATE OR REPLACE PROCEDURE proc_return_sal
        (p_emp_id IN employees.employee_id%TYPE,
         p_salary OUT employees.salary%TYPE)
IS
/******************************************************************
Program_name : proc_return_sal
Purpose: to return the salary when employee id is passed.

Date        Created By        Description
01/01/2022  Sachini           Procedure created
******************************************************************/
BEGIN
  DBMS_OUTPUT.PUT_LINE('p_emp_id : '||p_emp_id);
  SELECT salary INTO p_salary FROM employees
  WHERE employee_id = p_emp_id;
  
END proc_return_sal;
/

--Calling the procedure
DECLARE
  X employees.salary%TYPE;
BEGIN
  proc_return_sal(100, X);
  DBMS_OUTPUT.PUT_LINE('Salary : '||x);
END;

--Question 05

CREATE OR REPLACE FUNCTION func_return_sal
        (p_emp_id IN employees.employee_id%TYPE) RETURN employees.salary%TYPE
IS
/******************************************************************
Program_name : func_return_sal
Purpose: to return the salary when employee id is passed.

Date        Created By        Description
01/01/2022  Sachini           Function created
******************************************************************/
  v_salary employees.salary%TYPE;
BEGIN
  SELECT salary INTO v_salary FROM employees
  WHERE employee_id = p_emp_id;
  
  RETURN v_salary;
END func_return_sal;
/

--Calling the procedure
DECLARE
  X employees.salary%TYPE;
BEGIN
  x:=func_return_sal(120);
  DBMS_OUTPUT.PUT_LINE('Salary : '||x);
END;

--Question 06
CREATE OR REPLACE FUNCTION func_return_newsal
        (p_sal IN employees.salary%TYPE,
         p_pct IN NUMBER) RETURN employees.salary%TYPE
IS
/******************************************************************
Program_name : func_return_newsal
Purpose: to accepts the current salary and increment percentage and then return the new salary.

Date        Created By        Description
01/01/2022  Sachini           Function created
******************************************************************/
  v_new_salary employees.salary%TYPE;
BEGIN
  v_new_salary := p_sal * (1 + p_pct);
  --OR
  --v_new_salary := p_sal + p_sal * p_pct;
  
  RETURN v_new_salary;
END func_return_newsal;
/

--Calling the procedure
DECLARE
  X employees.salary%TYPE;
BEGIN
  x:=func_return_newsal(100, 0.3);
  DBMS_OUTPUT.PUT_LINE('New salary : '||x);
END;

